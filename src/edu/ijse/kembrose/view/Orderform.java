/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.kembrose.view;

import edu.ijse.kembrose.control.ItemController;
import edu.ijse.kembrose.control.OrderController;
import edu.ijse.kembrose.model.ItemModel;
import edu.ijse.kembrose.model.OrderDetailsModel;
import edu.ijse.kembrose.model.OrderDetailsModel2;
import edu.ijse.kembrose.model.OrderModel;
import edu.ijse.kembrose.other.IdGenerator;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruchira
 */
public class Orderform extends javax.swing.JFrame {

    String time;
    /**
     * Creates new form orderform
     */
    private ItemModel[] item;
    double totalamount = 0;
    private DefaultTableModel dtm;

    public Orderform() {
        initComponents();
        setLocationRelativeTo(null);
        setTime();
        setDate();
        setOrderId();
        foodItemCombo.requestFocus();
        loadFoodItem();

    }

    private void loadFoodItem() {
        try {
            item = ItemController.getAllItemId();
        } catch (SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (ItemModel itemModel : item) {
            foodItemCombo.addItem(itemModel.getName() + "  :  " + itemModel.getSize());
        }
    }

    private void setOrderId() {
        try {
            String newId = IdGenerator.getNewId("Orderform", "orderId", "or");
            orderidtext.setText(newId);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTime() {
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    Date date = new Date();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mm:ss");
                    time = dateFormat.format(date);
                    timelabel.setText(time);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {

                    }
                }
            }

        }.start();
    }

    private void setDate() {
        java.util.Date date = new java.util.Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formatedDate = dateFormat.format(date);
        datelabel.setText(formatedDate);
    }

    private void setTextFree() {
        quantitytext.setText("");
        priceText.setText("");
        requestedtimetext.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        datelabel = new javax.swing.JLabel();
        piclabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tableIdText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tableNoLable = new javax.swing.JLabel();
        contactnotext = new javax.swing.JTextField();
        tableOrderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordertable = new javax.swing.JTable();
        requesedTimeLabel = new javax.swing.JLabel();
        requestedtimetext = new javax.swing.JTextField();
        removebutton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        orderidtext = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        paymenttext = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        quantitytext = new javax.swing.JTextField();
        addbutton = new javax.swing.JButton();
        priceText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        balancetext = new javax.swing.JTextField();
        totalamounttext = new javax.swing.JTextField();
        savebutton = new javax.swing.JButton();
        foodItemCombo = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        takeAwayButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 87, 43));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 650));
        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(228, 226, 226));
        jPanel3.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 87, 43));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Order Form");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(80, 0, 460, 57);

        timelabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timelabel.setForeground(new java.awt.Color(255, 255, 255));
        timelabel.setText("12.00.00");
        jPanel2.add(timelabel);
        timelabel.setBounds(730, 30, 78, 25);

        datelabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        datelabel.setForeground(new java.awt.Color(255, 255, 255));
        datelabel.setText("20th April 2016");
        jPanel2.add(datelabel);
        datelabel.setBounds(730, 0, 100, 30);

        piclabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/kembrose/view/images/lunch.png"))); // NOI18N
        piclabel.setText("jLabel3");
        jPanel2.add(piclabel);
        piclabel.setBounds(10, 0, 60, 60);

        jPanel3.add(jPanel2);
        jPanel2.setBounds(0, 0, 900, 60);

        jPanel4.setBackground(java.awt.Color.white);
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Order Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 18))); // NOI18N
        jPanel4.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel2.setText("Quantity  :");
        jPanel4.add(jLabel2);
        jLabel2.setBounds(30, 140, 100, 18);

        tableIdText.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableIdText.setText("0");
        tableIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableIdTextActionPerformed(evt);
            }
        });
        tableIdText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableIdTextKeyReleased(evt);
            }
        });
        jPanel4.add(tableIdText);
        tableIdText.setBounds(630, 140, 140, 24);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setText("Contact No  :");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(480, 190, 100, 18);

        tableNoLable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableNoLable.setText("Table No  :");
        jPanel4.add(tableNoLable);
        tableNoLable.setBounds(480, 140, 130, 18);

        contactnotext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        contactnotext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactnotextKeyReleased(evt);
            }
        });
        jPanel4.add(contactnotext);
        contactnotext.setBounds(630, 190, 140, 24);

        tableOrderButton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableOrderButton.setText("Table Order");
        tableOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableOrderButtonActionPerformed(evt);
            }
        });
        jPanel4.add(tableOrderButton);
        tableOrderButton.setBounds(630, 30, 120, 30);

        ordertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Item", "Unit Price", "Quantity", "Status", "Price"
            }
        ));
        jScrollPane1.setViewportView(ordertable);
        if (ordertable.getColumnModel().getColumnCount() > 0) {
            ordertable.getColumnModel().getColumn(0).setMinWidth(200);
            ordertable.getColumnModel().getColumn(0).setPreferredWidth(200);
            ordertable.getColumnModel().getColumn(0).setMaxWidth(200);
        }

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(30, 300, 540, 140);

        requesedTimeLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        requesedTimeLabel.setText("Requested Time  :");
        jPanel4.add(requesedTimeLabel);
        requesedTimeLabel.setBounds(480, 90, 130, 18);

        requestedtimetext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        requestedtimetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestedtimetextActionPerformed(evt);
            }
        });
        jPanel4.add(requestedtimetext);
        requestedtimetext.setBounds(630, 90, 140, 24);

        removebutton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        removebutton.setText("Remove");
        removebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removebuttonActionPerformed(evt);
            }
        });
        jPanel4.add(removebutton);
        removebutton.setBounds(180, 260, 120, 30);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("Order Id  :");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(30, 40, 100, 18);

        orderidtext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        orderidtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderidtextActionPerformed(evt);
            }
        });
        orderidtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderidtextKeyReleased(evt);
            }
        });
        jPanel4.add(orderidtext);
        orderidtext.setBounds(170, 40, 160, 24);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel10.setText("Payment  :");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(340, 490, 120, 18);

        paymenttext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        paymenttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymenttextActionPerformed(evt);
            }
        });
        paymenttext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymenttextKeyReleased(evt);
            }
        });
        jPanel4.add(paymenttext);
        paymenttext.setBounds(460, 490, 110, 24);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel11.setText("Price  :");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(30, 200, 100, 18);

        quantitytext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        quantitytext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantitytextKeyReleased(evt);
            }
        });
        jPanel4.add(quantitytext);
        quantitytext.setBounds(170, 140, 160, 24);

        addbutton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        addbutton.setText("Add");
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });
        jPanel4.add(addbutton);
        addbutton.setBounds(30, 260, 120, 30);

        priceText.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jPanel4.add(priceText);
        priceText.setBounds(170, 190, 160, 24);

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel12.setText("Food Item  :");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(30, 90, 100, 18);

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel13.setText("Balance  :");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(340, 530, 120, 18);

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel14.setText("Total Amount  :");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(340, 450, 120, 18);

        balancetext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jPanel4.add(balancetext);
        balancetext.setBounds(460, 530, 110, 24);

        totalamounttext.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        totalamounttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalamounttextActionPerformed(evt);
            }
        });
        jPanel4.add(totalamounttext);
        totalamounttext.setBounds(460, 450, 110, 24);

        savebutton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        savebutton.setText("Save");
        savebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebuttonActionPerformed(evt);
            }
        });
        jPanel4.add(savebutton);
        savebutton.setBounds(590, 520, 90, 30);

        foodItemCombo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        foodItemCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                foodItemComboItemStateChanged(evt);
            }
        });
        foodItemCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodItemComboActionPerformed(evt);
            }
        });
        jPanel4.add(foodItemCombo);
        foodItemCombo.setBounds(170, 90, 260, 24);

        searchButton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel4.add(searchButton);
        searchButton.setBounds(780, 520, 90, 30);

        takeAwayButton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        takeAwayButton.setText("Take Away");
        takeAwayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeAwayButtonActionPerformed(evt);
            }
        });
        jPanel4.add(takeAwayButton);
        takeAwayButton.setBounds(480, 30, 120, 30);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setText("Completed");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);
        jButton1.setBounds(330, 260, 120, 30);

        updateButton.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel4.add(updateButton);
        updateButton.setBounds(690, 520, 80, 30);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/kembrose/view/images/FontAwesome_f0f4(0)_64.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel4);
        jLabel4.setBounds(10, 500, 64, 60);

        jPanel3.add(jPanel4);
        jPanel4.setBounds(0, 60, 880, 570);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 10, 880, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableIdTextActionPerformed

    private void requestedtimetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestedtimetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requestedtimetextActionPerformed

    private void orderidtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderidtextActionPerformed

    }//GEN-LAST:event_orderidtextActionPerformed

    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        try {
            Double unitprice = Double.parseDouble(priceText.getText());
            String foodItem = foodItemCombo.getSelectedItem().toString();
            String status = "Pending";
            //get price = qty * unitprice
            Integer quantity = Integer.parseInt(quantitytext.getText());
            Double price = (quantity * unitprice);
//            double totalamount = 0;
            totalamount = +price;

            //get text add table
            Object[] row = new Object[]{foodItem, unitprice, quantity, status, price};
            dtm = (DefaultTableModel) ordertable.getModel();
            dtm.addRow(row);
            //totalamount += price;
            totalamounttext.setText(Double.toString(totalamount));
            setTextFree();
            //clear text
        } catch (NullPointerException | ArrayIndexOutOfBoundsException | NumberFormatException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_addbuttonActionPerformed

    private void totalamounttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalamounttextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalamounttextActionPerformed

    private void savebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebuttonActionPerformed
        ArrayList<OrderDetailsModel> orderList = new ArrayList<>();
        String orderid = orderidtext.getText();

        String date = datelabel.getText();
        String requestedtime = "";
        if (requestedtimetext.getText() == null) {
            requestedtimetext.setText(timelabel.getText());
        } else {
            requestedtime = requestedtimetext.getText();
        }
        // String requestedtime = requestedtimetext.getText();
        int tableId = Integer.parseInt(tableIdText.getText());
        String contactNo = contactnotext.getText();

        OrderModel orders = new OrderModel(orderid, tableId, contactNo, date, time, requestedtime);
        try {
            boolean isAdded = OrderController.addOrders(orders);
            if (isAdded) {
                // JOptionPane.showMessageDialog(this, "Added success");

                for (int i = 0; i < ordertable.getRowCount(); i++) {
                    try {
                        String foodName = (String) ordertable.getValueAt(i, 0);
                        int qty = (int) ordertable.getValueAt(i, 2);
                        String status = (String) ordertable.getValueAt(i, 3);
                        String ar[] = foodName.split(" : ");
                        ItemModel model = ItemController.searchItem(ar[0]);

                        OrderDetailsModel model1 = new OrderDetailsModel(orderid, model.getItemId(), qty, Double.parseDouble(totalamounttext.getText()), status);
                        //System.out.println("Model " + model1);

                        if (model1 != null) {
                            orderList.add(model1);
                        }

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

                boolean isAddedList = OrderController.addOrderDetail(orderList);
                if (isAddedList) {
                    JOptionPane.showMessageDialog(this, "Added Success");
                    dtm.setRowCount(0);
                } else {
                    JOptionPane.showMessageDialog(this, "Added Failed");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Added Failed");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_savebuttonActionPerformed

    private void paymenttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymenttextActionPerformed
        Double totalAmountText = Double.parseDouble(totalamounttext.getText());
        Double payment = Double.parseDouble(paymenttext.getText());
        double balance = 0;
        balance = payment - totalAmountText;
        balancetext.setText(Double.toString(balance));
    }//GEN-LAST:event_paymenttextActionPerformed

    private void foodItemComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodItemComboActionPerformed

    }//GEN-LAST:event_foodItemComboActionPerformed

    private void foodItemComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foodItemComboItemStateChanged
        String[] name = foodItemCombo.getSelectedItem().toString().split("  :  ");
        try {

            String price = ItemController.searchprice(name[0], name[1]);
            //  System.out.println("Name :" + name[0]);
            // System.out.println("Size :" + name[1]);
            priceText.setText(price);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_foodItemComboItemStateChanged

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
            OrderModel order = OrderController.searchOrder(orderidtext.getText());
            if (order != null) {
                requestedtimetext.setText(order.getRequestedTime());
                contactnotext.setText(order.getContactNo());
                tableIdText.setText(Integer.toString(order.getTableNo()));

            } else {
                JOptionPane.showMessageDialog(this, "Order Not Found");
            }
            ArrayList<OrderDetailsModel2> orderDetails = OrderController.searchOrderDetails(orderidtext.getText());
            DefaultTableModel defaultTableModel = (DefaultTableModel) ordertable.getModel();
            if (orderDetails != null) {

                for (OrderDetailsModel2 detailsModel2 : orderDetails) {
                    int price2 = (int) (detailsModel2.getPrice() * detailsModel2.getQuantity());
                    String s = detailsModel2.getName() + " : " + detailsModel2.getSize();
                    Object[] rowData = {s, detailsModel2.getPrice(), detailsModel2.getQuantity(), detailsModel2.getStatus(), price2};
                    defaultTableModel.addRow(rowData);

                    //System.out.println(s);
                    totalamounttext.setText(detailsModel2.getTotalAmount() + "");
                    //int price2 = 
                }
            } else {
                JOptionPane.showMessageDialog(this, "Order Not Found");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void tableOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableOrderButtonActionPerformed
        requesedTimeLabel.setVisible(false);
        requestedtimetext.setVisible(false);
        tableIdText.setVisible(true);
        tableNoLable.setVisible(true);
    }//GEN-LAST:event_tableOrderButtonActionPerformed

    private void takeAwayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeAwayButtonActionPerformed
        requesedTimeLabel.setVisible(true);
        requestedtimetext.setVisible(true);
        tableIdText.setVisible(false);
        tableNoLable.setVisible(false);
    }//GEN-LAST:event_takeAwayButtonActionPerformed

    private void removebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removebuttonActionPerformed
        dtm.removeRow(ordertable.getSelectedRow());
    }//GEN-LAST:event_removebuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ordertable.setValueAt("Completed", ordertable.getSelectedRow(), 3);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
//        int quantity = (int) dtm.getValueAt(ordertable.getSelectedRow(), 2);
//        String status = (String) dtm.getValueAt(ordertable.getSelectedRow(), 3);
//        Double totalAmount = Double.parseDouble(totalamounttext.getText());
        String orderId = orderidtext.getText();
        String contactNo = contactnotext.getText();
        int tableNo = Integer.parseInt(tableIdText.getText());
        String requestedtime = "";
        if (requestedtimetext.getText() == null) {
            requestedtimetext.setText(timelabel.getText());
        } else {
            requestedtime = requestedtimetext.getText();
        }
        String date = datelabel.getText();
        OrderModel orderModel = new OrderModel(orderId, tableNo, contactNo, date, time, requestedtime);
        try {
            boolean isAdded = OrderController.updateOrders(orderModel);
            if (isAdded) {
                // System.out.println("+++"+quantity);
                int quantity = (int) ordertable.getValueAt(ordertable.getSelectedRow(), 2);
                //System.out.println("+++"+quantity);
                String status = (String) ordertable.getValueAt(ordertable.getSelectedRow(), 3);
                Double totalAmount = Double.parseDouble(totalamounttext.getText());
                String foodName = (String) ordertable.getValueAt(ordertable.getSelectedRow(), 0);
                String ar[] = foodName.split(" : ");
                ItemModel model = ItemController.searchItem(ar[0]);
                OrderDetailsModel model2 = new OrderDetailsModel(orderId, model.getItemId(), quantity, totalAmount, status);
                boolean isAdded2 = OrderController.updateOrderDetails(model2);
                if (isAdded2) {
                    JOptionPane.showMessageDialog(this, "Update Successful");
                } else {
                    JOptionPane.showMessageDialog(this, "Update Not Successful");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Update Not Successful");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Orderform.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_updateButtonActionPerformed

    private void paymenttextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymenttextKeyReleased
        String payment = paymenttext.getText();
        Pattern pattern = Pattern.compile("[\\d]*");
        Matcher matcher = pattern.matcher(payment);
        boolean matches = matcher.matches();
        if (!matches) {
            paymenttext.setText(payment.substring(0, payment.length() - 1));
        }
    }//GEN-LAST:event_paymenttextKeyReleased

    private void quantitytextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantitytextKeyReleased
        String quantity = quantitytext.getText();
        Pattern pattern = Pattern.compile("[\\d]{0,2}");
        Matcher matcher = pattern.matcher(quantity);
        boolean matches = matcher.matches();
        if (!matches) {
            quantitytext.setText(quantity.substring(0, quantity.length() - 1));
        }
    }//GEN-LAST:event_quantitytextKeyReleased

    private void tableIdTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableIdTextKeyReleased
        String tId = tableIdText.getText();
        Pattern pattern = Pattern.compile("[\\d]{0,2}");
        Matcher matcher = pattern.matcher(tId);
        boolean matches = matcher.matches();
        if (!matches) {
            tableIdText.setText(tId.substring(0, tId.length() - 1));
        }
    }//GEN-LAST:event_tableIdTextKeyReleased

    private void contactnotextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactnotextKeyReleased
        String cNo = contactnotext.getText();
        boolean matches = cNo.matches("[\\d]{0,10}");
        if (!matches) {
            contactnotext.setText(cNo.substring(0, cNo.length() - 1));
        }
    }//GEN-LAST:event_contactnotextKeyReleased

    private void orderidtextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderidtextKeyReleased
        String oId = orderidtext.getText();
        boolean matches = oId.matches("[or]{0,2}[\\d]{0,5}");
        if (!matches) {
            orderidtext.setText(oId.substring(0, oId.length() - 1));
        }
    }//GEN-LAST:event_orderidtextKeyReleased

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        new Tablereservation().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orderform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orderform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orderform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orderform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orderform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbutton;
    private javax.swing.JTextField balancetext;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField contactnotext;
    private javax.swing.JLabel datelabel;
    private javax.swing.JComboBox foodItemCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField orderidtext;
    private javax.swing.JTable ordertable;
    private javax.swing.JTextField paymenttext;
    private javax.swing.JLabel piclabel;
    private javax.swing.JTextField priceText;
    private javax.swing.JTextField quantitytext;
    private javax.swing.JButton removebutton;
    private javax.swing.JLabel requesedTimeLabel;
    private javax.swing.JTextField requestedtimetext;
    private javax.swing.JButton savebutton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField tableIdText;
    private javax.swing.JLabel tableNoLable;
    private javax.swing.JButton tableOrderButton;
    private javax.swing.JButton takeAwayButton;
    private javax.swing.JLabel timelabel;
    private javax.swing.JTextField totalamounttext;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
